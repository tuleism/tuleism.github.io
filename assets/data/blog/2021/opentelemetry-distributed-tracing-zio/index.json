{"hash":"25a5d663bc74a8a307f4df8ab380b824472878c6","data":{"metadata":{"siteName":"Random.nextBlog","siteUrl":"https://tuleism.github.io","siteDescription":"Tech Blog on Scala, Programming, Data, Search and Distributed Systems"},"doc":{"title":"OpenTelemetry Distributed Tracing with ZIO","slug":"opentelemetry-distributed-tracing-zio","path":"/blog/2021/opentelemetry-distributed-tracing-zio/","date":"01 Nov 2021","publishedTime":"2021-11-01","timeToRead":9,"content":"<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h2>\n<p>This post is some quick notes on using <a href=\"https://zio.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ZIO</a> and <a href=\"https://github.com/zio/zio-telemetry\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zio-telemetry</a> to implement <a href=\"https://opentelemetry.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenTelemetry</a> distributed tracing for Scala applications.\nThe source code is available <a href=\"https://github.com/tuleism/opentelemetry-distributed-tracing-zio\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<p>This is not an introduction to any of these technologies, but here are a few good reads:</p>\n<ul>\n<li>NewRelic's introduction to <a href=\"https://newrelic.com/resources/ebooks/quick-introduction-distributed-tracing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Distributed Tracing</a>.</li>\n<li>Lightstep's concise summary for <a href=\"https://opentelemetry.lightstep.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenTelemetry</a>.</li>\n</ul>\n<h2 id=\"initial-implementation\"><a href=\"#initial-implementation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Initial implementation</h2>\n<p>For demonstration purpose, we will perform <a href=\"https://opentelemetry.io/docs/concepts/instrumenting/#manual-instrumentation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">manual instrumentation</a> on a <a href=\"Hhttps://github.com/tuleism/opentelemetry-distributed-tracing-zio/commit/d9ba391dc9725e3e4ddae9c05cfe2641d8a435cf\">modified</a> version of the <a href=\"https://scalapb.github.io/zio-grpc/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zio-grpc</a>'s <a href=\"https://github.com/scalapb/zio-grpc/tree/master/examples/helloworld\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">helloworld example</a>, in which we incorporate both <a href=\"https://grpc.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC</a> and HTTP communications:</p>\n<ul>\n<li><strong>Original</strong>: <code class=\"language-inline-text\">hello-client</code> sends a <code class=\"language-inline-text\">HelloRequest</code> with <code class=\"language-inline-text\">name</code> <em>x</em> and <code class=\"language-inline-text\">hello-server</code> returns a <code class=\"language-inline-text\">HelloResponse</code> with <code class=\"language-inline-text\">message</code> <em>Hello, x</em>.</li>\n<li><strong>Modified</strong>: in addition to the original behavior, client sends an optional integer field <code class=\"language-inline-text\">guess</code> and server performs an HTTP request to <a href=\"https://httpbin.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTPBin</a> based on its value.</li>\n</ul>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 631 127' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8871836d62b9c1777af8e91cc043a8d2'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8871836d62b9c1777af8e91cc043a8d2)' width='631' height='127' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAANCAYAAAAZr2hsAAAACXBIWXMAAAsSAAALEgHS3X78AAAEQklEQVRIx51WbVNaVxDmB3baD/3eD20%2bdDLVpp1JZzKtnarVakxjJH3RqBBjAAGhVANGRFQQoxHF4V1RkFGUiPImoIL49O7Bawg1ei87s8Ocy56zZ599dvdItre3EYlEblTeJp/Pg6RcLuPi4kKwkpydnSEajd7qi9fd3V2cn5%2bL8kNKdyOxWqbQOziEQfU4%2bnRWSNUWdMgMeDwwgheKETjsc8xOAhESj8dRrxwdHeH09FSwfTqdRiaTqcvXwrwNvw6Z0b0GtC6UcUe%2bhs87Tbir8KFl4QLdK4BsfB4rbxcrAJRKJYb2TUoSDAaxs7PDgNjf3xekiUQCfr8fOp3uKkPV59au6S4kyWQSoVAIBwcHgvzs7e3hHWf7dukN2h5J0TJfxIPJJD5p6EBj6x9ofTKAzxp/w6cPBtC2BLTZctDqDeIYQBSmMqBMnpycXCnRu1QsMi0Wz1AoFK5s6Jf2BAIBZidUUqkUA5oAqfZ1kxYK3F0KOcg0r/DteALNz83weDx4Ku3BvN2G7h4p/ppw46u/bWiyHqN3SF0BYGNjA5ubm1heXmZBxmIxuFwu9s3n8yGXy7FL0ff/gZJKYyUchXczwnR9ewc57iK1QpmkDNMZxAin08lqnRjC%2byfflHUKmuhPIIiR8mW/eT23hC9lLhgmLDjOpCCTyxHZjkIxJMfWfgpfdOpw3xDBwEtNBQC32w2FQgGVSgWTyQSbzQaNRgOlUgmLxYLDw0N2MNGfpyjfbDK5PIz2RcyvuhkAQQ6Mo3SldqubEgVO63A4zPwMDw/DbDYz0Pv7%2b5nfsbExGAwGxhQCgPcrtOmWLkt1au4NvpY78bRPBr1uFO3t7bDb7WhubsbY%2bDjutDzD96MhyBVqcSVAWbxOsrn8B2u%2b89c2UDFNkHoAlZIoBpQrfiembWjQbkE/Wen0/YMyrG%2bEWEJJvvnThCbzEeTDqgoAtyHMZ3F6eprVFAVCGcpms0zz%2bRz7zWQq6%2bPL7%2b//z2Nra%2bsKgJv8XTGLO99oNLLpQSWYrTnzOqXJUT4v4Z9/X%2bFnaxZNaid%2b72zDk64OWCZN6Olqx3c/taFxJIBWWwEvVRpxAFCp8Cy4bWrUThCa60WuSfIMuc0XBUT%2bqORqJ8XHlD/fOjWJQUcMXQFuDBrD%2bKV3FD88fIb7Ug3uaUN46AcezyWgUioguY6uH5vLfFMSuqd2P2VTzJujGjAhwtvFubEofzGMR7pF3FO60aDw4K58CT9q3eh5vY4%2bsw/dvc/hWnVCQvOTsnOTUgOjbi32BVj7GqS6prOE%2bCMGVAcl1MfFJYNSqSTWfW4EfF4EA34E/T54XE4EPS5seNewH9t9/xIUElgtymJY8MEFBQZSj6/q/fQoMnKTZWZmBg6Hg2k8/g5ebqw7V1aRvGSzpJ7DxQZfu78ewMTuo3KdnZ2FVqvFFDfK57jRTi9ZGvF6vR5er5fZ/QdHyjJtGtNmugAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"631\" alt=\"Initial Diagram\" data-srcset=\"/assets/static/opentelemetry-init.1d0800a.ee0cd29e84cd8d789ae0247b67cfb754.png 631w\" data-sizes=\"(max-width: 631px) 100vw, 631px\" data-src=\"/assets/static/opentelemetry-init.1d0800a.ee0cd29e84cd8d789ae0247b67cfb754.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/opentelemetry-init.1d0800a.ee0cd29e84cd8d789ae0247b67cfb754.png\" width=\"631\" alt=\"Initial Diagram\"></noscript></p>\n<h3 id=\"add-the-new-flag-guess\"><a href=\"#add-the-new-flag-guess\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add the new flag <code class=\"language-inline-text\">guess</code>:</h3>\n<div class=\"gridsome-code-title\"><span>helloworld.proto</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"protobuf\"><pre class=\"language-protobuf\"><code class=\"language-protobuf\"><span class=\"token comment\">// The greeting service definition.</span>\n<span class=\"token keyword\">service</span> <span class=\"token class-name\">Greeter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Sends a greeting</span>\n  <span class=\"token keyword\">rpc</span> <span class=\"token function\">SayHello</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloRequest</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloReply</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// The request message containing the user's name.</span>\n<span class=\"token keyword\">message</span> <span class=\"token class-name\">HelloRequest</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">string</span> name <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"gridsome-highlight-code-line\">  <span class=\"token positional-class-name class-name\">google<span class=\"token punctuation\">.</span>protobuf<span class=\"token punctuation\">.</span>Int32Value</span> guess <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// The response message containing the greetings</span>\n<span class=\"token keyword\">message</span> <span class=\"token class-name\">HelloReply</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">string</span> message <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"add-zio-grpc-dependency\"><a href=\"#add-zio-grpc-dependency\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add zio-grpc dependency</h3>\n<div class=\"gridsome-code-title\"><span>project/plugins.sbt</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\">resolvers <span class=\"token operator\">+=</span> Resolver<span class=\"token punctuation\">.</span>sonatypeRepo<span class=\"token punctuation\">(</span><span class=\"token string\">\"snapshots\"</span><span class=\"token punctuation\">)</span>\n\naddSbtPlugin<span class=\"token punctuation\">(</span><span class=\"token string\">\"org.scalameta\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"sbt-scalafmt\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"2.4.3\"</span><span class=\"token punctuation\">)</span>\n\naddSbtPlugin<span class=\"token punctuation\">(</span><span class=\"token string\">\"com.thesamet\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"sbt-protoc\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"1.0.4\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> zioGrpcVersion <span class=\"token operator\">=</span> <span class=\"token string\">\"0.5.1+12-93cdbe22-SNAPSHOT\"</span>\n\nlibraryDependencies <span class=\"token operator\">++</span><span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"com.thesamet.scalapb.zio-grpc\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-grpc-codegen\"</span> <span class=\"token operator\">%</span> zioGrpcVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"com.thesamet.scalapb\"</span>          <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"compilerplugin\"</span>   <span class=\"token operator\">%</span> <span class=\"token string\">\"0.11.5\"</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"set-up-buildsbt\"><a href=\"#set-up-buildsbt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set up <code class=\"language-inline-text\">build.sbt</code></h3>\n<ul>\n<li>Generate Scala code from <code class=\"language-inline-text\">helloworld.proto</code>.</li>\n<li>Depend on <a href=\"https://sttp.softwaremill.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sttp</a> for HTTP client.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>build.sbt</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">val</span> grpcVersion <span class=\"token operator\">=</span> <span class=\"token string\">\"1.41.0\"</span>\n<span class=\"token keyword\">val</span> sttpVersion <span class=\"token operator\">=</span> <span class=\"token string\">\"3.3.15\"</span>\n\n<span class=\"token keyword\">val</span> scalaPBRuntime <span class=\"token operator\">=</span> <span class=\"token string\">\"com.thesamet.scalapb\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"scalapb-runtime-grpc\"</span> <span class=\"token operator\">%</span> scalapb<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>Version<span class=\"token punctuation\">.</span>scalapbVersion\n\n<span class=\"token keyword\">val</span> grpcRuntimeDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"io.grpc\"</span>      <span class=\"token operator\">%</span> <span class=\"token string\">\"grpc-netty\"</span> <span class=\"token operator\">%</span> grpcVersion<span class=\"token punctuation\">,</span>\n  scalaPBRuntime<span class=\"token punctuation\">,</span>\n  scalaPBRuntime <span class=\"token operator\">%</span> <span class=\"token string\">\"protobuf\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"gridsome-highlight-code-line\"><span class=\"token keyword\">val</span> sttpZioDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span></span><span class=\"gridsome-highlight-code-line\">  <span class=\"token string\">\"com.softwaremill.sttp.client3\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"async-http-client-backend-zio\"</span> <span class=\"token operator\">%</span> sttpVersion</span><span class=\"gridsome-highlight-code-line\"><span class=\"token punctuation\">)</span></span>\n<span class=\"token keyword\">lazy</span> <span class=\"token keyword\">val</span> root <span class=\"token operator\">=</span> Project<span class=\"token punctuation\">(</span><span class=\"token string\">\"opentelemetry-distributed-tracing-zio\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>aggregate<span class=\"token punctuation\">(</span>zio<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">lazy</span> <span class=\"token keyword\">val</span> zio <span class=\"token operator\">=</span> commonProject<span class=\"token punctuation\">(</span><span class=\"token string\">\"zio\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">(</span>\n<span class=\"gridsome-highlight-code-line\">  Compile <span class=\"token operator\">/</span> PB<span class=\"token punctuation\">.</span>targets <span class=\"token operator\">:</span><span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span></span><span class=\"gridsome-highlight-code-line\">    scalapb<span class=\"token punctuation\">.</span>gen<span class=\"token punctuation\">(</span>grpc <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>          <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span>Compile <span class=\"token operator\">/</span> sourceManaged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">    scalapb<span class=\"token punctuation\">.</span>zio_grpc<span class=\"token punctuation\">.</span>ZioCodeGenerator <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span>Compile <span class=\"token operator\">/</span> sourceManaged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value</span><span class=\"gridsome-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span>  libraryDependencies <span class=\"token operator\">++</span><span class=\"token operator\">=</span> grpcRuntimeDeps <span class=\"token operator\">++</span> sttpZioDeps\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"client-implementation\"><a href=\"#client-implementation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Client implementation</h3>\n<ul>\n<li>Create a gRPC client pointing to localhost:9000.</li>\n<li>Send a single <code class=\"language-inline-text\">HelloRequest</code>.</li>\n<li>Send 5 <code class=\"language-inline-text\">HelloRequest</code>s in parallel.</li>\n<li>Send a single <code class=\"language-inline-text\">HelloRequest</code> with an invalid guess.</li>\n<li>Print \"Done\" and exit.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>ZClient.scala</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZClient <span class=\"token keyword\">extends</span> zio<span class=\"token punctuation\">.</span>App <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> clientLayer <span class=\"token operator\">=</span> GreeterClient<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">(</span>\n    ZManagedChannel<span class=\"token punctuation\">(</span>\n      ManagedChannelBuilder<span class=\"token punctuation\">.</span>forAddress<span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>usePlaintext<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> singleHello <span class=\"token operator\">=</span> GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> multipleHellos <span class=\"token operator\">=</span> ZIO<span class=\"token punctuation\">.</span>collectAllParN<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\n    List<span class=\"token punctuation\">(</span>\n      GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> invalidHello <span class=\"token operator\">=</span> GreeterClient<span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ignore\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">def</span> myAppLogic <span class=\"token operator\">=</span>\n    singleHello <span class=\"token operator\">*</span><span class=\"token operator\">></span> multipleHellos <span class=\"token operator\">*</span><span class=\"token operator\">></span> invalidHello <span class=\"token operator\">*</span><span class=\"token operator\">></span> putStrLn<span class=\"token punctuation\">(</span><span class=\"token string\">\"Done\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">def</span> run<span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> URIO<span class=\"token punctuation\">[</span>ZEnv<span class=\"token punctuation\">,</span> ExitCode<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    myAppLogic<span class=\"token punctuation\">.</span>provideCustomLayer<span class=\"token punctuation\">(</span>clientLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exitCode\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"server-implementation\"><a href=\"#server-implementation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Server implementation</h3>\n<ul>\n<li>Fail the request if <code class=\"language-inline-text\">guess</code> is less than 0.</li>\n<li>Based on the value of <code class=\"language-inline-text\">guess</code>, delay for some time and then send a request to HTTPBin.</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">type</span> ZGreeterEnv <span class=\"token operator\">=</span> Clock <span class=\"token keyword\">with</span> Random <span class=\"token keyword\">with</span> SttpClient</code></pre></div>\n<div class=\"gridsome-code-title\"><span>ZGreeterImpl.scala</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZGreeterImpl <span class=\"token keyword\">extends</span> RGreeter<span class=\"token punctuation\">[</span>ZGreeterEnv<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">def</span> sayHello<span class=\"token punctuation\">(</span>request<span class=\"token operator\">:</span> HelloRequest<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>ZGreeterEnv<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> HelloReply<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> guess <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>guess<span class=\"token punctuation\">.</span>getOrElse<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n      _      <span class=\"token keyword\">&lt;-</span> ZIO<span class=\"token punctuation\">.</span>fail<span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">.</span>INVALID_ARGUMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>when<span class=\"token punctuation\">(</span>guess <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      code   <span class=\"token keyword\">&lt;-</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span>\n      delayMs <span class=\"token operator\">=</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span>\n      _      <span class=\"token keyword\">&lt;-</span> httpRequest<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>\n                  <span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">(</span>delayMs<span class=\"token punctuation\">.</span>millis<span class=\"token punctuation\">)</span>\n                  <span class=\"token punctuation\">.</span>mapError<span class=\"token punctuation\">(</span>ex <span class=\"token keyword\">=></span> Status<span class=\"token punctuation\">.</span>INTERNAL<span class=\"token punctuation\">.</span>withCause<span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> HelloReply<span class=\"token punctuation\">(</span>s<span class=\"token string\">\"Hello, ${request.name}\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">def</span> httpRequest<span class=\"token punctuation\">(</span>code<span class=\"token operator\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RIO<span class=\"token punctuation\">[</span>SttpClient<span class=\"token punctuation\">,</span> <span class=\"token builtin\">Unit</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    send<span class=\"token punctuation\">(</span>basicRequest<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>uri<span class=\"token string\">\"https://httpbin.org/status/$code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unit\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"run-it\"><a href=\"#run-it\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Run it</h3>\n<ul>\n<li>To run the server:</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sbt <span class=\"token string\">\"zio/runMain com.github.tuleism.ZServer\"</span>\n\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> running <span class=\"token punctuation\">(</span>fork<span class=\"token punctuation\">)</span> com.github.tuleism.ZServer\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> Server is running. Press Ctrl-C to stop.</code></pre></div>\n<ul>\n<li>To run the client:</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sbt <span class=\"token string\">\"zio/runMain com.github.tuleism.ZClient\"</span>\n\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> running <span class=\"token punctuation\">(</span>fork<span class=\"token punctuation\">)</span> com.github.tuleism.ZClient\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> Done\n<span class=\"token punctuation\">[</span>success<span class=\"token punctuation\">]</span> Total time: <span class=\"token number\">12</span> s</code></pre></div>\n<p>At this point, we only know that it takes roughly 12 seconds for the client to initialize and finish its work.</p>\n<p>Let's add distributed tracing to gain more insights into this.</p>\n<h2 id=\"common-tracing-requirements\"><a href=\"#common-tracing-requirements\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Common tracing requirements</h2>\n<ul>\n<li>For both client and server, we need to acquire a <a href=\"\">Tracer</a>, an object responsible for creating and managing <a href=\"\">Spans</a>.</li>\n<li>Tracing data is sent to <a href=\"https://www.jaegertracing.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jaeger</a>, which acts as a standalone <a href=\"https://opentelemetry.lightstep.com/the-collector-and-exporters/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">collector</a>.</li>\n</ul>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 631 331' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-0439668c2eb36e9a35f3e4bf17b8a2d7'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-0439668c2eb36e9a35f3e4bf17b8a2d7)' width='631' height='331' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAYAAADvVd%2bPAAAACXBIWXMAAAsSAAALEgHS3X78AAAH90lEQVRo3t1Z61Mb1xXn/%2brXTj71Y771UydNpp1O6jRt07TjpiYmrQPuOATXjwAmELAQDQ7hYUDBmIcTAkhCEgKh9ws9EKDXSivtSqtf77liZUWWACl4gntmji8r7%2b6553d%2b55x777b5fD54vd5TVb1HEASQKIqCUqnUlBYKBQSDwTNtqRoIBCDLctP2isUif8ao38Bn/QPo03yF3vEnuP3fRXR%2bPoXO3lE8%2bGIU87MzyOVyaEMTEo1G0aokk0lks9lz3y%2bKIo6Pj1uy5XU50HFPi1sG4F%2bbwO9GHXi9cxZv9G3i2qqMTvbbg8U9BsLjMgAUHULuNCVxOBw8MgREJBI5l8ZiMbhcLoyNjUGSpEqUVKXo1rOVyWRgt9v58%2bexEw6HcXh4iO3tbfT09OBvU358pAd%2b8W433rx6Cx3dffjln7vw2pVPcHX%2bEDeMwGeayeYY4Pf7%2bcTy%2bTynj6qSlEeB0ZVUliUever/p2ubzdYUA8jO/v4%2bT4Pa9zVSkeaSz%2bHx/AKujPvw3uAz6I0m3Lt7F08XFzkwvTMbeKNHh78v5fDxwNdlAJxOJzweD/R6PXeSEDWZTPy33d3dSu6HQiEesWoJpdIweP3Y9fhgdXlh9wWRzoovOHR0dMQZQFEiMLa2trjdeDwOt9vNWUI1gkYVNLq3GSF2kWxbrXhrwIg7o7MoSVkMDn0Bl9uDUc0IvMEw3uvV4bcju7itmSsDYDabMTw8jJGREUxPT2N5eRlarZb/ptPpOA1JaILVhYlHSmSIP1vHst4Ei8MNm8ePWDxRmZB6H4FKzxJVNRoNBgcHuS2DwYC%2bvj5MTExgZmaGpwrVC2IZPdNMEVTTZ9tixttDBnTcZjYmv8I/rrVjaWkJN258DO3oQ7x/sx%2b/fmDE/bH55lJABaJWUkK2biRqnyVan1eIdalUqiUGmE1GvKO18cpPMqLRYte2h2EWYJKbYyu4MhHCvdGZMgC1CONE1Ws1iisrKzw1iMo0uXQ6zVVkua3%2bTUqTr74mOlNrUwGojRxqr5mQjbm5OZ522Zr3N1JiDrHgu9VlXJ304NrjAG52daHrnx9CNzuN%2bz238EH7dbx5W4eODeDO8EQZgKwoI50psCJSZH8XGa0L5TFLYwFCVkaRYbC%2baYLLE4SYV1jU80gLUmPNlJXuE3MKf%2b44nkFOKp28t4hcvmxLtSec2JMLgMwAoDpBztd2jkaqpqfJsIG%2buS10u4H2%2bTCu90/ir1338f6tIfx%2bcBMfsjb4qRm42z%2bENnJaYaBHYnl8vxWHbz8Lf0jkYyAscmBICGG1L9ej%2bFlCz6tFjR63ewRsWhIIRkRuzxvMInzAqrmksLYMVitiyIliS/YItIeM7t2PvsUftTt4W2PDbwY28SeNCf%2bed%2bPuEye6hyZYfWAMiEYjcHsCCEcFWPbS%2bHohgkfzEWhnQtjzZOAPHrJ2FOQ5TCg3uwKspnUikWSOheDzh7jj3xnjmFyIMptRjM%2bFsR/NwekOIRoJIRI9YkBQ6jVno1RSKm10z2rGttkEK1sb7Fi3sWXYhMW4AZvFCJfdxu87WQgVcZyUcJSQED3Mw%2bXP8MnQtZCRKy%2btjkazzj%2bPYgmSXETsWEI8KZdtRXI4OMrjKC6xtCjwe6jsUIo0w4Bqe8SCp0%2bXePXf3NjA2toaryc%2bfwAG4xYL6OFzAGqlyHIimZarJo8Gzpy/Mj8HpCothELFyVqRWfR/DABUeKloU8udmprC/LwOVrY%2bWF1dxfj4OAemAkC9iBWKJRwzBpRp%2bKIjrbSn6ucSKZkXvob2WwDgtDbcSNrqTVAdFTZSasjy6SDU%2b71RCtBIztc6d1EAVL%2bP2ne1Vv%2bm3tN2mgPqSLmalxQ0AktRWBtSChwwNWfUtKn3LklScJbdiwDgPLWprZ6BRpSllvmikZoJyBmU1MJRzSblhE0FpaGNiwCgWWlrZKDeBKkwVuetKjPr/0H/3B9g3NYhuO94IapqPSkWS2fWk0sDQCMQUoLMV2y8P7N/NwIOdA6%2bhjuDP0f3dC8GrOtQ5NQJAUo84hR5YsBpkb%2bUADSKFq0OhQxNroAvbTsYXBjFg2/6McO2zu32CBJSsdLKyPl6teCVAaDRxMmxHVsac5EkFp0BdOqdWNhx4B1LGI5cAfvBHBy%2bzKlsemUAaNQiBVbRvz1Iot1gh3ZlAdfNTry%2bEcT6vgfZpIhMTmnK%2bUsNQH1HFLZmd%2bMTTwxd3iQ%2bsARxbe8AT%2bw7yCUPKtW/FRuXEoDaNCiyPbLFZITbYYeb7ffpBIm2sdXL51b7%2bKUF4Ie9XeEnt3TYcRg7QCIe54cSiUT8Ry%2bbLzUDfgAC2yLTMTkdepLz6vh/CUBl5acudTkAhbqbkFYn/QoUQXX5y/p7LoJS1SFEsy3vlWyDleNwQYD4zc9QCjwsg0CbIaVUX5s4S/jJADjvarBM/BLeag/h%2bo1pwPoulAvap1/UeUDLAJwLBKb941GMPxyDcWkCcsrHdklr8LpcWLcI2HWmsONM80NPUuNOEu5Alu0hCmc6UwuA%2bFMA0EjLC5oS3DYrfvUXE5K%2bJWD/U0j%2bRyj5P0fMb8aKXsDS94eYXT7A2lYcutUYnumPsbR%2bBF9IrCyMzrNPpzMDqeYg5qUAoBo5g7wnB3VHKO52sMov42UKbZ/VbfdLB4DyjA46%2bEcKts09VflHkxL/0EEfSzIVlfgo8F1i4WS3%2bFzPfO%2bJqh9L1IOXl%2b08yf8Au5nUXf5DGDMAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"631\" alt=\"Instrumented Diagram\" data-srcset=\"/assets/static/opentelemetry-instrumented.1d0800a.4a6a2be0cd06288dde9cf69f36a500c0.png 631w\" data-sizes=\"(max-width: 631px) 100vw, 631px\" data-src=\"/assets/static/opentelemetry-instrumented.1d0800a.4a6a2be0cd06288dde9cf69f36a500c0.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/opentelemetry-instrumented.1d0800a.4a6a2be0cd06288dde9cf69f36a500c0.png\" width=\"631\" alt=\"Instrumented Diagram\"></noscript></p>\n<h3 id=\"add-new-dependencies\"><a href=\"#add-new-dependencies\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add new dependencies</h3>\n<ul>\n<li><a href=\"https://zio.github.io/zio-telemetry/docs/overview/overview_opentelemetry\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zio-telemetry's OpenTelemetry module</a>.</li>\n<li>We also depend on <a href=\"https://zio.github.io/zio-config/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zio-config</a> to read tracing config from file and <a href=\"https://github.com/kitlangton/zio-magic\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zio-magic</a> to ease <a href=\"https://zio.dev/1.x/datatypes/contextual/zlayer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ZLayer</a> wiring.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>build.sbt</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">val</span> openTelemetryVersion <span class=\"token operator\">=</span> <span class=\"token string\">\"1.6.0\"</span>\n<span class=\"token keyword\">val</span> zioConfigVersion     <span class=\"token operator\">=</span> <span class=\"token string\">\"1.0.10\"</span>\n<span class=\"token keyword\">val</span> zioMagicVersion      <span class=\"token operator\">=</span> <span class=\"token string\">\"0.3.9\"</span>\n<span class=\"token keyword\">val</span> zioTelemetryVersion  <span class=\"token operator\">=</span> <span class=\"token string\">\"0.8.2\"</span>\n\n<span class=\"token keyword\">val</span> openTelemetryDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"io.opentelemetry\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"opentelemetry-exporter-jaeger\"</span>    <span class=\"token operator\">%</span> openTelemetryVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"io.opentelemetry\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"opentelemetry-sdk\"</span>                <span class=\"token operator\">%</span> openTelemetryVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"io.opentelemetry\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"opentelemetry-extension-noop-api\"</span> <span class=\"token operator\">%</span> s<span class=\"token string\">\"$openTelemetryVersion-alpha\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> zioConfigDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"dev.zio\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-config\"</span>          <span class=\"token operator\">%</span> zioConfigVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"dev.zio\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-config-magnolia\"</span> <span class=\"token operator\">%</span> zioConfigVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"dev.zio\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-config-typesafe\"</span> <span class=\"token operator\">%</span> zioConfigVersion\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> zioMagicDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"io.github.kitlangton\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-magic\"</span> <span class=\"token operator\">%</span> zioMagicVersion\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> zioTelemetryDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"dev.zio\"</span>                       <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-opentelemetry\"</span>                   <span class=\"token operator\">%</span> zioTelemetryVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"com.softwaremill.sttp.client3\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"zio-telemetry-opentelemetry-backend\"</span> <span class=\"token operator\">%</span> sttpVersion\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"add-a-config-layer\"><a href=\"#add-a-config-layer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add a config layer</h3>\n<div class=\"gridsome-code-title\"><span>application.conf</span></div><div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tracing {\n  enable = false\n  enable = ${?TRACING_ENABLE}\n  endpoint = \"http://127.0.0.1:14250\"\n  endpoint = ${?JAEGER_ENDPOINT}\n}</code></pre></div>\n<div class=\"gridsome-code-title\"><span>TracingConfig.scala</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">case</span> <span class=\"token keyword\">class</span> AppConfig<span class=\"token punctuation\">(</span>tracing<span class=\"token operator\">:</span> TracingConfig<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token keyword\">class</span> TracingConfig<span class=\"token punctuation\">(</span>enable<span class=\"token operator\">:</span> <span class=\"token builtin\">Boolean</span><span class=\"token punctuation\">,</span> endpoint<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">object</span> AppConfig <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> configDescriptor <span class=\"token operator\">=</span> descriptor<span class=\"token punctuation\">[</span>AppConfig<span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">val</span> live<span class=\"token operator\">:</span> Layer<span class=\"token punctuation\">[</span>ReadError<span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Has<span class=\"token punctuation\">[</span>AppConfig<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> TypesafeConfig<span class=\"token punctuation\">.</span>fromDefaultLoader<span class=\"token punctuation\">(</span>configDescriptor<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"add-a-tracer-layer\"><a href=\"#add-a-tracer-layer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add a <code class=\"language-inline-text\">Tracer</code> layer</h3>\n<ul>\n<li>Depend on the configuration, we either create a <em>noop</em> <code class=\"language-inline-text\">Tracer</code> or one that sends data to Jaeger.</li>\n<li>Once we have it, we can construct a <code class=\"language-inline-text\">Tracing</code> layer, which give us access to many <a href=\"https://www.javadoc.io/static/dev.zio/zio-opentelemetry_2.13/0.8.2/zio/telemetry/opentelemetry/Tracing$.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">useful operations in zio-telemetry</a>.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>ZTracer.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZTracer <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> InstrumentationName <span class=\"token operator\">=</span> <span class=\"token string\">\"com.github.tuleism\"</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">def</span> managed<span class=\"token punctuation\">(</span>serviceName<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> endpoint<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> resource <span class=\"token operator\">=</span> Resource<span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>ResourceAttributes<span class=\"token punctuation\">.</span>SERVICE_NAME<span class=\"token punctuation\">,</span> serviceName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n      spanExporter   <span class=\"token keyword\">&lt;-</span> ZManaged<span class=\"token punctuation\">.</span>fromAutoCloseable<span class=\"token punctuation\">(</span>\n                          Task<span class=\"token punctuation\">(</span>JaegerGrpcSpanExporter<span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setEndpoint<span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span>\n      spanProcessor  <span class=\"token keyword\">&lt;-</span> ZManaged<span class=\"token punctuation\">.</span>fromAutoCloseable<span class=\"token punctuation\">(</span>UIO<span class=\"token punctuation\">(</span>SimpleSpanProcessor<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>spanExporter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      tracerProvider <span class=\"token keyword\">&lt;-</span> UIO<span class=\"token punctuation\">(</span>\n                          SdkTracerProvider<span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>addSpanProcessor<span class=\"token punctuation\">(</span>spanProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setResource<span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toManaged_\n      openTelemetry  <span class=\"token keyword\">&lt;-</span> UIO<span class=\"token punctuation\">(</span>OpenTelemetrySdk<span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setTracerProvider<span class=\"token punctuation\">(</span>tracerProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toManaged_\n      tracer         <span class=\"token keyword\">&lt;-</span> UIO<span class=\"token punctuation\">(</span>openTelemetry<span class=\"token punctuation\">.</span>getTracer<span class=\"token punctuation\">(</span>InstrumentationName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toManaged_\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> tracer\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">def</span> live<span class=\"token punctuation\">(</span>serviceName<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RLayer<span class=\"token punctuation\">[</span>Has<span class=\"token punctuation\">[</span>TracingConfig<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Has<span class=\"token punctuation\">[</span>Tracer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n        config <span class=\"token keyword\">&lt;-</span> ZIO<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">[</span>TracingConfig<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>toManaged_\n<span class=\"gridsome-highlight-code-line\">        tracer <span class=\"token keyword\">&lt;-</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>config<span class=\"token punctuation\">.</span>enable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gridsome-highlight-code-line\">                    Task<span class=\"token punctuation\">(</span>NoopOpenTelemetry<span class=\"token punctuation\">.</span>getInstance<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getTracer<span class=\"token punctuation\">(</span>InstrumentationName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toManaged_</span><span class=\"gridsome-highlight-code-line\">                  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gridsome-highlight-code-line\">                    managed<span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">)</span></span><span class=\"gridsome-highlight-code-line\">                  <span class=\"token punctuation\">}</span></span>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> tracer\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toLayer\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"new-server\"><a href=\"#new-server\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>New server</h2>\n<h3 id=\"instrument-the-http-client\"><a href=\"#instrument-the-http-client\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Instrument the HTTP client</h3>\n<ul>\n<li>Use out-of-the-box <a href=\"https://sttp.softwaremill.com/en/latest/backends/wrappers/zio-opentelemetry.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sttp backend</a>.</li>\n<li>We also add additional HTTP specific attributes according to the OpenTelemetry's <a href=\"https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#name\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">semantic convention</a>.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>SttpTracing.scala</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> SttpTracing <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> ZioTelemetryOpenTelemetryTracer <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">def</span> before<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>request<span class=\"token operator\">:</span> Request<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">,</span> <span class=\"token builtin\">Nothing</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RIO<span class=\"token punctuation\">[</span>Tracing<span class=\"token punctuation\">,</span> <span class=\"token builtin\">Unit</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n      Tracing<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>SemanticAttributes<span class=\"token punctuation\">.</span>HTTP_METHOD<span class=\"token punctuation\">.</span>getKey<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\n        Tracing<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>SemanticAttributes<span class=\"token punctuation\">.</span>HTTP_URL<span class=\"token punctuation\">.</span>getKey<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\n        ZIO<span class=\"token punctuation\">.</span>unit\n\n    <span class=\"token keyword\">def</span> after<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>response<span class=\"token operator\">:</span> Response<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RIO<span class=\"token punctuation\">[</span>Tracing<span class=\"token punctuation\">,</span> <span class=\"token builtin\">Unit</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n      Tracing<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>SemanticAttributes<span class=\"token punctuation\">.</span>HTTP_STATUS_CODE<span class=\"token punctuation\">.</span>getKey<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\n        ZIO<span class=\"token punctuation\">.</span>unit\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">val</span> live <span class=\"token operator\">=</span> AsyncHttpClientZioBackend<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>flatMap <span class=\"token punctuation\">{</span> hasBackend <span class=\"token keyword\">=></span>\n    ZIO\n      <span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">[</span>Tracing<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">{</span> tracing <span class=\"token keyword\">=></span>\n        ZioTelemetryOpenTelemetryBackend<span class=\"token punctuation\">(</span>hasBackend<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">,</span> tracing<span class=\"token punctuation\">,</span> wrapper<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">.</span>toLayer\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"instrument-the-grpc-server\"><a href=\"#instrument-the-grpc-server\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Instrument the gRPC server</h3>\n<p>We can add <code class=\"language-inline-text\">Tracing</code> without changing our server implementation with a <a href=\"https://scalapb.github.io/zio-grpc/docs/decorating/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ZTransform</a>. For each request:</p>\n<ul>\n<li>We use <a href=\"https://www.javadoc.io/static/dev.zio/zio-opentelemetry_2.13/0.8.2/zio/telemetry/opentelemetry/TracingSyntax$$OpenTelemetryZioOps.html#spanFrom%5BC%5D(propagator:io.opentelemetry.context.propagation.TextMapPropagator,carrier:C,getter:io.opentelemetry.context.propagation.TextMapGetter%5BC%5D,spanName:String,spanKind:io.opentelemetry.api.trace.SpanKind,toErrorStatus:PartialFunction%5BE,io.opentelemetry.api.trace.StatusCode%5D):zio.ZIO%5BRwithzio.telemetry.opentelemetry.Tracing,E,A%5D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zio-telemetry's spanFrom</a>, which extracts the propagated context (through <a href=\"https://grpc.io/docs/what-is-grpc/core-concepts/#metadata\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC Metadata</a>, using <a href=\"https://w3c.github.io/trace-context/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3C Trace Context format</a>) and starts a new child <code class=\"language-inline-text\">Span</code> right after.</li>\n<li>We have access to a <a href=\"https://scalapb.github.io/zio-grpc/docs/context\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RequestContext</a> and thus the full method name used for <code class=\"language-inline-text\">Span</code>'s name.</li>\n<li>We also add additional gRPC specific attributes according to the OpenTelemetry's <a href=\"https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/rpc.md#grpc-attributes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">semantic convention</a>.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>GrpcTracing.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> GrpcTracing <span class=\"token punctuation\">{</span>\n<span class=\"gridsome-highlight-code-line\">  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> propagator<span class=\"token operator\">:</span> TextMapPropagator <span class=\"token operator\">=</span> W3CTraceContextPropagator<span class=\"token punctuation\">.</span>getInstance<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"gridsome-highlight-code-line\">  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> metadataGetter<span class=\"token operator\">:</span> TextMapGetter<span class=\"token punctuation\">[</span>Metadata<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> TextMapGetter<span class=\"token punctuation\">[</span>Metadata<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">def</span> keys<span class=\"token punctuation\">(</span>carrier<span class=\"token operator\">:</span> Metadata<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>Iterable<span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n      carrier<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">def</span> get<span class=\"token punctuation\">(</span>carrier<span class=\"token operator\">:</span> Metadata<span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span>\n      carrier<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>\n        Metadata<span class=\"token punctuation\">.</span>Key<span class=\"token punctuation\">.</span>of<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> Metadata<span class=\"token punctuation\">.</span>ASCII_STRING_MARSHALLER<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">def</span> withSemanticAttributes<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>effect<span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>Tracing <span class=\"token keyword\">with</span> R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n<span class=\"gridsome-highlight-code-line\">    Tracing<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>SemanticAttributes<span class=\"token punctuation\">.</span>RPC_SYSTEM<span class=\"token punctuation\">.</span>getKey<span class=\"token punctuation\">,</span> <span class=\"token string\">\"grpc\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">></span></span>      effect\n        <span class=\"token punctuation\">.</span>tapBoth<span class=\"token punctuation\">(</span>\n<span class=\"gridsome-highlight-code-line\">          status <span class=\"token keyword\">=></span></span><span class=\"gridsome-highlight-code-line\">            Tracing<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span></span><span class=\"gridsome-highlight-code-line\">              SemanticAttributes<span class=\"token punctuation\">.</span>RPC_GRPC_STATUS_CODE<span class=\"token punctuation\">.</span>getKey<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">              status<span class=\"token punctuation\">.</span>getCode<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"gridsome-highlight-code-line\">            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">          _ <span class=\"token keyword\">=></span></span><span class=\"gridsome-highlight-code-line\">            Tracing<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>SemanticAttributes<span class=\"token punctuation\">.</span>RPC_GRPC_STATUS_CODE<span class=\"token punctuation\">.</span>getKey<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">.</span>getCode<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span>        <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">def</span> serverTracingTransform<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ZTransform<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> R <span class=\"token keyword\">with</span> Tracing <span class=\"token keyword\">with</span> Has<span class=\"token punctuation\">[</span>RequestContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token keyword\">new</span> ZTransform<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> R <span class=\"token keyword\">with</span> Tracing <span class=\"token keyword\">with</span> Has<span class=\"token punctuation\">[</span>RequestContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">def</span> effect<span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>io<span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>R <span class=\"token keyword\">with</span> Tracing <span class=\"token keyword\">with</span> Has<span class=\"token punctuation\">[</span>RequestContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n          rc       <span class=\"token keyword\">&lt;-</span> ZIO<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">[</span>RequestContext<span class=\"token punctuation\">]</span>\n          metadata <span class=\"token keyword\">&lt;-</span> rc<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">.</span>wrap<span class=\"token punctuation\">(</span>identity<span class=\"token punctuation\">)</span>\n<span class=\"gridsome-highlight-code-line\">          result   <span class=\"token keyword\">&lt;-</span> withSemanticAttributes<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">)</span></span><span class=\"gridsome-highlight-code-line\">                        <span class=\"token punctuation\">.</span>spanFrom<span class=\"token punctuation\">(</span></span><span class=\"gridsome-highlight-code-line\">                          propagator<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">                          metadata<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">                          metadataGetter<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">                          rc<span class=\"token punctuation\">.</span>methodDescriptor<span class=\"token punctuation\">.</span>getFullMethodName<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">                          SpanKind<span class=\"token punctuation\">.</span>SERVER<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">                          <span class=\"token punctuation\">{</span> <span class=\"token keyword\">case</span> _ <span class=\"token keyword\">=></span> StatusCode<span class=\"token punctuation\">.</span>ERROR <span class=\"token punctuation\">}</span></span><span class=\"gridsome-highlight-code-line\">                        <span class=\"token punctuation\">)</span></span>        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> result\n\n      <span class=\"token keyword\">def</span> stream<span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>io<span class=\"token operator\">:</span> ZStream<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ZStream<span class=\"token punctuation\">[</span>R <span class=\"token keyword\">with</span> Tracing <span class=\"token keyword\">with</span> Has<span class=\"token punctuation\">[</span>RequestContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n        <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"update-server-main\"><a href=\"#update-server-main\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Update Server Main</h3>\n<ul>\n<li>Add required layers for Tracing.</li>\n<li>Transform the original <code class=\"language-inline-text\">ZGreeterImpl</code>.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>ZServer.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">zio<span class=\"token punctuation\">.</span>magic<span class=\"token punctuation\">.</span></span>_\n\n<span class=\"token keyword\">object</span> ZServer <span class=\"token keyword\">extends</span> ServerMain <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> requirements <span class=\"token operator\">=</span>\n    ZLayer\n      <span class=\"token punctuation\">.</span>wire<span class=\"token punctuation\">[</span>ZEnv <span class=\"token keyword\">with</span> ZGreeterEnv<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>\n        ZEnv<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">        AppConfig<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">.</span>narrow<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span>tracing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">        ZTracer<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello-server\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">        Tracing<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">        SttpTracing<span class=\"token punctuation\">.</span>live</span>      <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>orDie\n\n  <span class=\"token keyword\">def</span> services<span class=\"token operator\">:</span> ServiceList<span class=\"token punctuation\">[</span><span class=\"token builtin\">Any</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    ServiceList\n<span class=\"gridsome-highlight-code-line\">      <span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>ZGreeterImpl<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">[</span>ZGreeterEnv<span class=\"token punctuation\">,</span> Has<span class=\"token punctuation\">[</span>RequestContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>GrpcTracing<span class=\"token punctuation\">.</span>serverTracingTransform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span>      <span class=\"token punctuation\">.</span>provideLayer<span class=\"token punctuation\">(</span>requirements<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"new-client\"><a href=\"#new-client\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>New client</h2>\n<h3 id=\"inject-current-context-into-grpc-metadata-for-context-propagation\"><a href=\"#inject-current-context-into-grpc-metadata-for-context-propagation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Inject current context into <a href=\"https://grpc.io/docs/what-is-grpc/core-concepts/#metadata\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gRPC Metadata</a> for <a href=\"https://opentelemetry.lightstep.com/core-concepts/context-propagation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">context propagation</a></h3>\n<div class=\"gridsome-code-title\"><span>GrpcTracing.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> GrpcTracing <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"gridsome-highlight-code-line\">  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> metadataSetter<span class=\"token operator\">:</span> TextMapSetter<span class=\"token punctuation\">[</span>Metadata<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>carrier<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">=></span></span><span class=\"gridsome-highlight-code-line\">    carrier<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>Metadata<span class=\"token punctuation\">.</span>Key<span class=\"token punctuation\">.</span>of<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> Metadata<span class=\"token punctuation\">.</span>ASCII_STRING_MARSHALLER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></span><span class=\"gridsome-highlight-code-line\">    </span><span class=\"gridsome-highlight-code-line\">  <span class=\"token keyword\">val</span> contextPropagationClientInterceptor<span class=\"token operator\">:</span> ZClientInterceptor<span class=\"token punctuation\">[</span>Tracing<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ZClientInterceptor<span class=\"token punctuation\">.</span>headersUpdater <span class=\"token punctuation\">{</span></span><span class=\"gridsome-highlight-code-line\">    <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token keyword\">=></span></span><span class=\"gridsome-highlight-code-line\">      metadata<span class=\"token punctuation\">.</span>wrapM<span class=\"token punctuation\">(</span>Tracing<span class=\"token punctuation\">.</span>inject<span class=\"token punctuation\">(</span>propagator<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> metadataSetter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><span class=\"gridsome-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>  \n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gridsome-code-title\"><span>ZClient.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZClient <span class=\"token keyword\">extends</span> zio<span class=\"token punctuation\">.</span>App <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> clientLayer <span class=\"token operator\">=</span> GreeterClient<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">(</span>\n    ZManagedChannel<span class=\"token punctuation\">(</span>\n      ManagedChannelBuilder<span class=\"token punctuation\">.</span>forAddress<span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>usePlaintext<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">      Seq<span class=\"token punctuation\">(</span>GrpcTracing<span class=\"token punctuation\">.</span>contextPropagationClientInterceptor<span class=\"token punctuation\">)</span></span>    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  \n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"start-a-span-for-each-request\"><a href=\"#start-a-span-for-each-request\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Start a <code class=\"language-inline-text\">Span</code> for each request</h3>\n<ul>\n<li>Use <code class=\"language-inline-text\">ZTransform</code> to record the relevant gRPC attributes.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>GrpcTracing.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> GrpcTracing <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">def</span> clientTracingTransform<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ZTransform<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> R <span class=\"token keyword\">with</span> Tracing<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token keyword\">new</span> ZTransform<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> R <span class=\"token keyword\">with</span> Tracing<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n<span class=\"gridsome-highlight-code-line\">      <span class=\"token keyword\">def</span> effect<span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>io<span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ZIO<span class=\"token punctuation\">[</span>R <span class=\"token keyword\">with</span> Tracing<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> withSemanticAttributes<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">)</span></span>\n      <span class=\"token keyword\">def</span> stream<span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>io<span class=\"token operator\">:</span> ZStream<span class=\"token punctuation\">[</span>R<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ZStream<span class=\"token punctuation\">[</span>R <span class=\"token keyword\">with</span> Tracing<span class=\"token punctuation\">,</span> Status<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Unlike the server, we don't have access to a <code class=\"language-inline-text\">RequestContext</code> object, so we have to set the method name manually.</li>\n<li>We also start additional <code class=\"language-inline-text\">Span</code>s.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>ZClient.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZClient <span class=\"token keyword\">extends</span> zio<span class=\"token punctuation\">.</span>App <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  \n  \n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">def</span> errorToStatusCode<span class=\"token punctuation\">[</span>E<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> PartialFunction<span class=\"token punctuation\">[</span>E<span class=\"token punctuation\">,</span> StatusCode<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">case</span> _ <span class=\"token keyword\">=></span> StatusCode<span class=\"token punctuation\">.</span>ERROR <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">def</span> sayHello<span class=\"token punctuation\">(</span>request<span class=\"token operator\">:</span> HelloRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>\n    GreeterClient\n      <span class=\"token punctuation\">.</span>sayHello<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n<span class=\"gridsome-highlight-code-line\">      <span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span></span><span class=\"gridsome-highlight-code-line\">        GreeterGrpc<span class=\"token punctuation\">.</span>METHOD_SAY_HELLO<span class=\"token punctuation\">.</span>getFullMethodName<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">        SpanKind<span class=\"token punctuation\">.</span>CLIENT<span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">        errorToStatusCode</span><span class=\"gridsome-highlight-code-line\">      <span class=\"token punctuation\">)</span></span>      \n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> singleHello <span class=\"token operator\">=</span> sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token string\">\"singleHello\"</span><span class=\"token punctuation\">,</span> toErrorStatus <span class=\"token operator\">=</span> errorToStatusCode<span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> multipleHellos <span class=\"token operator\">=</span> ZIO\n    <span class=\"token punctuation\">.</span>collectAllParN<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\n      List<span class=\"token punctuation\">(</span>\n        sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token string\">\"multipleHellos\"</span><span class=\"token punctuation\">,</span> toErrorStatus <span class=\"token operator\">=</span> errorToStatusCode<span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> invalidHello <span class=\"token operator\">=</span> sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid\"</span><span class=\"token punctuation\">,</span> Some<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ignore\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token string\">\"invalidHello\"</span><span class=\"token punctuation\">,</span> toErrorStatus <span class=\"token operator\">=</span> errorToStatusCode<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"add-required-layers\"><a href=\"#add-required-layers\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add required layers</h3>\n<div class=\"gridsome-code-title\"><span>ZClient.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZClient <span class=\"token keyword\">extends</span> zio<span class=\"token punctuation\">.</span>App <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  \n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> requirements <span class=\"token operator\">=</span> ZLayer\n    <span class=\"token punctuation\">.</span>wire<span class=\"token punctuation\">[</span>ZEnv <span class=\"token keyword\">with</span> Tracing<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>\n      ZEnv<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">      AppConfig<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">.</span>narrow<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span>tracing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">      ZTracer<span class=\"token punctuation\">.</span>live<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello-client\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gridsome-highlight-code-line\">      Tracing<span class=\"token punctuation\">.</span>live</span>    <span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">></span> clientLayer\n\n  <span class=\"token keyword\">def</span> run<span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> URIO<span class=\"token punctuation\">[</span>ZEnv<span class=\"token punctuation\">,</span> ExitCode<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n<span class=\"gridsome-highlight-code-line\">    myAppLogic<span class=\"token punctuation\">.</span>provideCustomLayer<span class=\"token punctuation\">(</span>requirements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exitCode</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"showtime\"><a href=\"#showtime\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Showtime</h2>\n<h3 id=\"run-jaeger-through-docker\"><a href=\"#run-jaeger-through-docker\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Run Jaeger through Docker</h3>\n<ul>\n<li>Tracing data can be sent to port 14250.</li>\n<li>We can view <a href=\"https://github.com/jaegertracing/jaeger-ui\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jaeger UI</a> at <a href=\"http://localhost:16686\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:16686</a>.</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --rm --name jaeger <span class=\"token punctuation\">\\</span>\n  -p <span class=\"token number\">16686</span>:16686 <span class=\"token punctuation\">\\</span>\n  -p <span class=\"token number\">14250</span>:14250 <span class=\"token punctuation\">\\</span>\n  jaegertracing/all-in-one:1.25</code></pre></div>\n<h3 id=\"start-the-server\"><a href=\"#start-the-server\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Start the server</h3>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">TRACING_ENABLE</span><span class=\"token operator\">=</span>true sbt <span class=\"token string\">\"zio/runMain com.github.tuleism.ZServer\"</span>\n\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> running <span class=\"token punctuation\">(</span>fork<span class=\"token punctuation\">)</span> com.github.tuleism.ZServer\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> Server is running. Press Ctrl-C to stop.</code></pre></div>\n<h3 id=\"start-the-client\"><a href=\"#start-the-client\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Start the client</h3>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">TRACING_ENABLE</span><span class=\"token operator\">=</span>true sbt <span class=\"token string\">\"zio/runMain com.github.tuleism.ZClient\"</span>\n\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> running <span class=\"token punctuation\">(</span>fork<span class=\"token punctuation\">)</span> com.github.tuleism.ZClient\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> Done\n<span class=\"token punctuation\">[</span>success<span class=\"token punctuation\">]</span> Total time: <span class=\"token number\">12</span> s</code></pre></div>\n<h3 id=\"distributed-tracing-in-action\"><a href=\"#distributed-tracing-in-action\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Distributed Tracing in action!</h3>\n<ul>\n<li>Now we can see the details for <code class=\"language-inline-text\">multipleHellos</code>:</li>\n</ul>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 1050' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-fd00bc9815086c2b9f7f3416dd5b0f18'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-fd00bc9815086c2b9f7f3416dd5b0f18)' width='2560' height='1050' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAaCAYAAAAHfFpPAAAACXBIWXMAABYlAAAWJQFJUiTwAAAGXUlEQVRYw%2bVYa4/TRhTNTwUtKkJCC7Twl2ilSpR2lwJbyoeyLSyl%2bwJ283ASO3EedmwnsR07D8e3547trJN4IRGBVq2jozseH49nru%2b5c53cjRs36Ju7d%2bnrO3fo%2bq1b9NXeHm3v79PWkyd0/eZN0X8L/deuXaPbt2/THZxvb28Lm/R/KWxtbc2B%2b65evUo3Mc83b/6kk5MTOj4%2bnllGoVCgnZ0dunLlipgvr%2bHevXvE6%2bb7c6PRiFRVpaOjI2rAnr99S5VSibRGg96/f4%2bB39DZ2ZkYVJZl8oc%2buYMBTadT%2bjcdrusK9Pt9Mi2Lut3uDJ1Oh3idw%2bGQBph7r9cT53zkLJB1TaN6rUYKFihXq8IRslylaqVCUrEoztutpkAHXBXcrmlSlx8E28eAptGhHj8Q5xZg4KF8fcATc5xL4WFCrut8kOPYNtlYGNs58HWMz9b3PAGPgTGTNlueA9/P8xRzxLy4zc7IVRWF6q0Wqe02SVi8BCdUseCSUiepppIEW2/r1Da7wtZaGhVlhVStI9rnUkVYpdkWfczhtoIIamDMDjsYDtHZLgL9FThTM4yI9wF0Ms7bcLKMufI4nQxu2qZh9LrU0jFP3JtTMEljOKKO51N3NKYKvPmsdkbPK6/pefkA9oCeSa/oafF3elr6Q%2bAXPofdAx6fv6AnuLYnvRR93H5ePaSOPyRTjDsU7Rm8CAba%2bsCjpu0sczL4i318v%2bYOqO24H%2bcLjBYwJrnVptzQ9%2be05AQB/aqcYHG/YaH7sC/ggH06rB/SsXoEHMY4oiPuqx9dtIX9i06b77C4HibSX4Lh22TEbd2FPsEzMnhZ/Ll%2bQOP7V%2bEP8Oad9gy63SJz0CHbtSnXRvi3oWsNaLEUELp1tYw%2bJQVovtenXt8WlmF1e5E1LXL6rFMnsoANnmWZmdB1jQxDR3Lic0OA211rAXGfriNCkV8i/vz16P70ecQ30/yEZ%2bozdC0dHE3ks9zx6anI9LwLvHz1il4fHFA%2bXxALM1PgTMpoQzLCUdAP21MkySqsjP4aJ9MYKjS2jA6dSWXklho1MJaqIacAMviLUGJ7UihSQalRDffK7WxO1NbF9dNiiYq1Ovh6iq/Pgccq1bHz5fOUa%2bDNVTjpYSEKEiJvGzpuNk0jyqjeQMCHVNIYYUtxcP0pEt9PSIK7wPeNFt2vN%2blbtZUNXPuu0Rbg9n21SQ/Q5nt3LsEjJFXGzgc4i/zdFfjMeawblOMtQ8GiC5JE%2bfNzKpfLQg78trVYGgx2Bu%2bjCdgJbMNUPXCIcR42VPoZEfEIW%2bY8or7dZkNY5vzYbFIVSZcmk0v393DNemM9fkg53gs9LGZgmySVCpRH5VTFdpgsnEOeI4KROCEdCVFBFOKHY2wji0pAOYY0DztG6vrEs1BcRUVJGIYXiM%2bTgmvuWhbW5ccQDuDKjosJy2iJ0lFCNLDGDezPDFFQxAtOR0DigDB6IvnTkHquhmKjjGqruoRurwKJVVJ9FRp4XJWN/zkH%2bFh8DRm9gNAvIClUUP3x22YJsF2UQOKEJQfgOEaB8QAS2EV47yC8s9HA9abAQ7QrqOhCSGAahnMTp4wFXRrIn8CfScDdlARmIS6tJIFASGA5Ar6oAz5VAsnho921Gwjt8izELxCdryqBL%2baAjUggHvAdPjhYAo/WkEA5JYEsjSYSW1XT6/I3JgFxjPsI8dJaEpj6XZrEEXDJ61rvu3hN/uYkgOf6kzEyvZwK%2bUUsS8BCPW/g48UJpmRPgiX0x5PM/suwKr8P%2bHjmxiQQjEZ0gk9NsQsgtHdi7KYg%2buLrq2Lz/Kgw%2bwG8015vcxIYjiYU%2bBbRQAZqgELkKjRNw5EpAKaL/ZfBUTbDT55rV4ASAOn1CxT6%2biZ3ATgB7b4IsSicR3F0zGfpMFHMB5HI%2bVP5fPDfX54/QtVpwhlVCtwaHFKl6dC6kEAxkQDefpYE2FGLbz9xQFLE5JHRH6j8LdBEnY8Mj11hyPeNRnPb1OfM6h/lpx0XxknQ83x8xxv4IszjUzi/JIHk4ygdAQnSdUCIXWDaL4oQC4ExihzXHdB4nN7np2sk9M/LF7sA/6kYOWFAPVOjIj6LS6US1et1Ef68cC/5szEDE97DpwEFcEQw9rETVgUmdpV81yLbcUUIsqOCIBB8tqvic/Nzc6GzYpj9l5Cj//nxN3Zyf%2b5NgIfHAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"2560\" alt=\"multipleHellos Span\" data-srcset=\"/assets/static/multipleHellos.82a2fbd.3d57506aa051fcc115e94398a9d532d8.png 480w, /assets/static/multipleHellos.cbab2cf.3d57506aa051fcc115e94398a9d532d8.png 1024w, /assets/static/multipleHellos.2665e34.3d57506aa051fcc115e94398a9d532d8.png 1920w, /assets/static/multipleHellos.42db587.3d57506aa051fcc115e94398a9d532d8.png 2560w\" data-sizes=\"(max-width: 2560px) 100vw, 2560px\" data-src=\"/assets/static/multipleHellos.42db587.3d57506aa051fcc115e94398a9d532d8.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/multipleHellos.42db587.3d57506aa051fcc115e94398a9d532d8.png\" width=\"2560\" alt=\"multipleHellos Span\"></noscript></p>\n<ul>\n<li>And which <code class=\"language-inline-text\">guess</code> is causing the longest delay.</li>\n</ul>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 562' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-3b101ab61fa991420f740ef96ed843bc'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-3b101ab61fa991420f740ef96ed843bc)' width='2560' height='562' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAOCAYAAACfOxrCAAAACXBIWXMAABYlAAAWJQFJUiTwAAAFjklEQVRIx72WyXIbRwyG%2bf5vEcuJc8ghL5BKxZe4KpJNWlyHFNfZ9527/vzonpFoShWrfMjhK6DRy6DRaPR0kiyDE4SIPQfGaIBhv4/JaATXthVJGKIqCtRl%2bYJdXePxeMRht0Vd1ZjHLsbOCBN38oyjpeEZlIaSLVN/hlHoYxQlmOXFC6ZZrnit71vyZnwGg%2bg5nNty0Z41bYOsixIdL03xx3SGW2761qCT3PTUdTGyLIxMC4P1WrXXSYpVnGCVaNbUl3EMi0FYsK9v2fjNcvGL6eFXy8cHyg%2bUrf5uYeIn8u4FK818%2bcPccP7Nco33wmqDn0lru2lsNwuti5T%2b92sTv5s2OhVP8GOcYsAT7DEi3awgObqMqNATSduXNCN5IzPcEYPB%2b%2bfuDn/f3uKu9xX33S56d7fokt7nOyVvP33CoNfDab/DgcES9nWFw7Zu2Cq5r7V%2bKXdV9QKZu680ul0j40FEvg97s8FqPsd6MUcaRQg9DxGxeIiSyTJGpLQnwyEsju%2bUhwP%2bCiN85Ya6Db0LvW33GJRLPtO2YDp5zJTFYgGbcrlaaZZLbLj4A50R3WRfTCdjZo6QMU2lHdFJIWEgc64ltpS6yIztipsruclKEJ3XruB1LEReIGNlzaSZq75BW0qbkDTfFD1r2iEDId9SAfjIANzLqbeb/R5NAJZ0Jg4CjHh9LG5SNr1mdG1eI9Edx0YQ%2bJQOZrMZVgyOaZqKOYMjgdNyruY/PDyouXoNSzkqSJDEYXFegiGBuKRqglTXQq1obdpOW/Xct2WGCaJ3Sl6BP8MY90x/uQI65fNX%2bUIHvjT6LQMwl8gz4htuyGWdCKMYjuvzBFJu2qPTPFGO9fwArucjYKBVn%2bvB95mSLH4yx3ZchcyVdpJk8LxmThCptSzbUXPresesqN9MVW2ZJRVy7k18kbWFlNe6kCKYMxJ3dKxPJz/TiS6d6NPxIYvcIGphmx8fswaMufEJ5ZByTSSy8qGUeplHqPIQZRbw5YgoQxRpoGx1EVNGjR4pdJt6GWuebBdjCt2/LWNlL7h2eUXRkj7T2kVmfJ3iwIZnL3n/mWWbOXxnhSRy0ZF7UKQRNvM%2bxsM%2bZpMhHHMNx2qgbm9WLCgOF4zV2CKNkYtk%2b3xkAdvylJ0N9ukCp3xKHnDMRM5wbvQ6HCq2jWz1y/al7dqu%2b0bYRlfQtovHin0ywUFIDd1u7IfEeO6jfkyn9MnAIVugcz4/4nzaA7UF9gL7iIR43L1G8A37MsR4JIG7x3w2oc7/iME9JuMRZR8D6v37HgxjzNTlXS1Z2MrigvxKXtrfZqsr1qEoRBLzqrBuCK5rI02kwAbsC1hfNkqPQt2W/vVqAY%2byc2oCcC43OHOT523QcKm37WdUAKoY44nBjQ4xHk8wnU4xZEHs9wcwqIu91aVY5awvT0g1L7SuZa4qd2sXsizX0N7a8mZsu47YQhbJgD9zpimF2FTIa%2bD5UkMCVVjDUL84kdj5NEohdnjlnwNQmQxA9Opmn9hdBIDjDlv9rEl1T5JYVer2eZGiKJuWKi4VXca0L4RUfN/3lCPyQoizYjPNjXJM5rq0yxx5TeS18LmZ1nHLMtU6gmywnS9jhIg%2byNi2X2SaJk%2bVX%2bRut1Py6Qqcqw1PNWrS%2byrdt6/h86cmUZE3%2bAcp773TOC0fb9sS9faJlLY4JIFo2%2bKcjJV5gmxeNqE3aqm2jJU%2bmVs3/wOXz9z1s/g91P9DoWXndDrjdNzhVNk48WSPdUBCpZ/UaUc6M15hVyV0QL%2bx1X/w2tv8fyKnrw/C5OE4sJhptm0io73zlBJ1htVixkI2wsNsqn5gJE3LIsee6bJTafPMVn5f%2bXv7%2bMgMOp/fxOl0evPYHx1/PUf8k3SXp3pfRar6H7OZepmOrHv/AtoBJps8DJMNAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"2560\" alt=\"bad guess\" data-srcset=\"/assets/static/spanDetails.82a2fbd.578d7416cde473d780ebfadffb123e68.png 480w, /assets/static/spanDetails.cbab2cf.578d7416cde473d780ebfadffb123e68.png 1024w, /assets/static/spanDetails.2665e34.578d7416cde473d780ebfadffb123e68.png 1920w, /assets/static/spanDetails.42db587.578d7416cde473d780ebfadffb123e68.png 2560w\" data-sizes=\"(max-width: 2560px) 100vw, 2560px\" data-src=\"/assets/static/spanDetails.42db587.578d7416cde473d780ebfadffb123e68.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/spanDetails.42db587.578d7416cde473d780ebfadffb123e68.png\" width=\"2560\" alt=\"bad guess\"></noscript></p>\n<h2 id=\"integration-with-logging\"><a href=\"#integration-with-logging\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Integration with Logging</h2>\n<ul>\n<li>Let's add tracing context into log messages following the <a href=\"https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/overview.md#trace-context-in-legacy-formats\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">specification</a>.</li>\n<li>We're going to use <a href=\"https://izumi.7mind.io/logstage/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">izumi logstage</a>, our favorite logging library.</li>\n<li>See the <a href=\"https://github.com/tuleism/opentelemetry-distributed-tracing-zio/commit/d9ba391dc9725e3e4ddae9c05cfe2641d8a435cf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">diffs</a>.</li>\n</ul>\n<h3 id=\"add-logging-dependency\"><a href=\"#add-logging-dependency\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add logging dependency</h3>\n<div class=\"gridsome-code-title\"><span>build.sbt</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">val</span> izumiVersion         <span class=\"token operator\">=</span> <span class=\"token string\">\"1.0.8\"</span>\n\n<span class=\"token keyword\">val</span> loggingDeps <span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"io.7mind.izumi\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"logstage-core\"</span>          <span class=\"token operator\">%</span> izumiVersion<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"io.7mind.izumi\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">%</span> <span class=\"token string\">\"logstage-adapter-slf4j\"</span> <span class=\"token operator\">%</span> izumiVersion\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"setup-logging\"><a href=\"#setup-logging\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setup logging</h3>\n<ul>\n<li>Add <code class=\"language-inline-text\">trace_id</code>, <code class=\"language-inline-text\">span_id</code> to logging context if current trace context is valid.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>Logging.scala</span></div><div class=\"gridsome-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> Logging <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">def</span> baseLogger <span class=\"token operator\">=</span> IzLogger<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">val</span> live<span class=\"token operator\">:</span> ZLayer<span class=\"token punctuation\">[</span>Has<span class=\"token punctuation\">[</span>Tracing<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Nothing</span><span class=\"token punctuation\">,</span> Has<span class=\"token punctuation\">[</span>LogZIO<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n        tracing <span class=\"token keyword\">&lt;-</span> ZIO<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">[</span>Tracing<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> LogZIO<span class=\"token punctuation\">.</span>withDynamicContext<span class=\"token punctuation\">(</span>baseLogger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\n        Tracing<span class=\"token punctuation\">.</span>getCurrentSpanContext\n          <span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span>spanContext <span class=\"token keyword\">=></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>spanContext<span class=\"token punctuation\">.</span>isValid<span class=\"token punctuation\">)</span>\n              CustomContext<span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"trace_id\"</span>    <span class=\"token operator\">-></span> spanContext<span class=\"token punctuation\">.</span>getTraceId<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"span_id\"</span>     <span class=\"token operator\">-></span> spanContext<span class=\"token punctuation\">.</span>getSpanId<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"trace_flags\"</span> <span class=\"token operator\">-></span> spanContext<span class=\"token punctuation\">.</span>getTraceFlags<span class=\"token punctuation\">.</span>asHex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span>\n              CustomContext<span class=\"token punctuation\">.</span>empty\n          <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>provide<span class=\"token punctuation\">(</span>Has<span class=\"token punctuation\">(</span>tracing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toLayer\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"add-a-few-log-messages\"><a href=\"#add-a-few-log-messages\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Add a few log messages</h3>\n<ul>\n<li>E.g for <code class=\"language-inline-text\">singleHello</code>.</li>\n</ul>\n<div class=\"gridsome-code-title\"><span>ZClient.scala</span></div><div class=\"gridsome-highlight has-highlighted-lines\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> ZClient <span class=\"token keyword\">extends</span> zio<span class=\"token punctuation\">.</span>App <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> singleHello <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n<span class=\"gridsome-highlight-code-line\">      _ <span class=\"token keyword\">&lt;-</span> log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"singleHello\"</span><span class=\"token punctuation\">)</span></span>      _ <span class=\"token keyword\">&lt;-</span> sayHello<span class=\"token punctuation\">(</span>HelloRequest<span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token string\">\"singleHello\"</span><span class=\"token punctuation\">,</span> toErrorStatus <span class=\"token operator\">=</span> errorToStatusCode<span class=\"token punctuation\">)</span>\n  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"sample-logs\"><a href=\"#sample-logs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sample Logs</h3>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> running <span class=\"token punctuation\">(</span>fork<span class=\"token punctuation\">)</span> com.github.tuleism.ZClient\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> I <span class=\"token number\">2021</span>-11-01T22:59:10.881 <span class=\"token punctuation\">(</span>ZClient.scala:37<span class=\"token punctuation\">)</span>  …tuleism.ZClient.singleHello <span class=\"token punctuation\">[</span><span class=\"token number\">24</span>:zio-default-async-11<span class=\"token punctuation\">]</span> <span class=\"token assign-left variable\">trace_id</span><span class=\"token operator\">=</span>9c8a7ebb87381293bc8937a5f7673cb9, <span class=\"token assign-left variable\">span_id</span><span class=\"token operator\">=</span>cb7c9a440472e1be, <span class=\"token assign-left variable\">trace_flags</span><span class=\"token operator\">=</span>01 singleHello\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> I <span class=\"token number\">2021</span>-11-01T22:59:14.064 <span class=\"token punctuation\">(</span>ZClient.scala:44<span class=\"token punctuation\">)</span>  …eism.ZClient.multipleHellos <span class=\"token punctuation\">[</span><span class=\"token number\">21</span>:zio-default-async-8 <span class=\"token punctuation\">]</span> <span class=\"token assign-left variable\">trace_id</span><span class=\"token operator\">=</span>fe405246fbaa5f876c19f14fa649a99f, <span class=\"token assign-left variable\">span_id</span><span class=\"token operator\">=</span>bef19494bef4106e, <span class=\"token assign-left variable\">trace_flags</span><span class=\"token operator\">=</span>01 multipleHellos\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> I <span class=\"token number\">2021</span>-11-01T22:59:18.171 <span class=\"token punctuation\">(</span>ZClient.scala:60<span class=\"token punctuation\">)</span>  …uleism.ZClient.invalidHello <span class=\"token punctuation\">[</span><span class=\"token number\">26</span>:zio-default-async-13<span class=\"token punctuation\">]</span> <span class=\"token assign-left variable\">trace_id</span><span class=\"token operator\">=</span>be5ccd425e0cfb01fd97274abd0c4d72, <span class=\"token assign-left variable\">span_id</span><span class=\"token operator\">=</span>ea6499fb9a7c8d28, <span class=\"token assign-left variable\">trace_flags</span><span class=\"token operator\">=</span>01 invalidHello\n<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span> I <span class=\"token number\">2021</span>-11-01T22:59:18.272 <span class=\"token punctuation\">(</span>ZClient.scala:66<span class=\"token punctuation\">)</span>  ….tuleism.ZClient.myAppLogic <span class=\"token punctuation\">[</span><span class=\"token number\">15</span>:zio-default-async-2 <span class=\"token punctuation\">]</span> Done\n<span class=\"token punctuation\">[</span>success<span class=\"token punctuation\">]</span> Total time: <span class=\"token number\">12</span> s</code></pre></div>\n<h2 id=\"extra-notes\"><a href=\"#extra-notes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Extra notes</h2>\n<ul>\n<li>If we receive an HTTP 5xx response, we should set the <code class=\"language-inline-text\">Span</code> status to error according to the <a href=\"https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#status\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">semantic convention</a>. However, it is currently <a href=\"https://github.com/zio/zio-telemetry/issues/444\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">not possible</a> with <code class=\"language-inline-text\">zio-telemetry</code>.</li>\n<li>We need <a href=\"https://github.com/scalapb/zio-grpc/issues/309\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">a better way</a> to implement tracing for <code class=\"language-inline-text\">zio-grpc</code> client.</li>\n</ul>\n","description":"A tutorial on implementing distributed tracing for Scala applications using OpenTelemetry and various libraries from the ZIO ecosystem.","tags":[{"title":"distributed-tracing"},{"title":"observability"},{"title":"scala"}],"headings":[{"value":"Introduction","anchor":"#introduction","depth":2},{"value":"Initial implementation","anchor":"#initial-implementation","depth":2},{"value":"Common tracing requirements","anchor":"#common-tracing-requirements","depth":2},{"value":"New server","anchor":"#new-server","depth":2},{"value":"New client","anchor":"#new-client","depth":2},{"value":"Showtime","anchor":"#showtime","depth":2},{"value":"Integration with Logging","anchor":"#integration-with-logging","depth":2},{"value":"Extra notes","anchor":"#extra-notes","depth":2}]}},"context":{}}